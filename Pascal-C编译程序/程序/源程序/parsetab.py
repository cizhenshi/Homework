
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EF216F4668AE55F1ACA23D1EC52B435D'
    
_lr_action_items = {'ASSIGNOP':([150,152,153,203,210,211,218,275,276,337,338,377,],[205,208,-128,208,-83,-81,288,-82,-191,-85,-173,-84,]),',':([28,29,30,32,34,35,39,49,50,59,60,61,62,63,64,74,75,83,85,164,165,166,190,191,192,194,195,196,198,199,200,201,202,210,211,236,238,241,245,249,260,264,272,273,275,276,278,279,280,281,282,292,293,296,297,299,313,316,317,319,320,321,322,323,324,325,326,327,328,329,337,338,339,352,368,370,371,376,377,378,379,400,],[-6,53,55,-21,-16,-17,-20,53,55,-12,-14,-18,-13,-15,-19,53,55,-133,-5,-40,222,224,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,55,53,53,-122,-112,-182,-111,-106,335,-82,-191,-128,-104,340,341,335,-41,-39,-148,-149,53,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,335,-116,-85,-173,335,53,-120,-96,392,-105,-84,-175,-103,-95,]),'(':([8,143,144,147,151,153,154,156,159,186,187,189,195,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,289,290,291,335,384,385,],[16,178,181,186,186,209,212,213,186,186,186,186,263,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,-98,-97,186,186,186,186,]),'VAR':([1,5,7,14,15,19,20,58,71,79,84,86,87,88,115,116,145,178,181,183,239,240,301,302,304,306,359,360,361,362,364,365,387,388,],[-128,-8,-128,25,-23,-188,-7,-129,-22,-128,-130,-132,-2,-131,-128,-50,-128,234,234,25,-162,-56,234,234,234,234,-160,-55,-54,-158,-159,-52,-157,-156,]),'INTEGER':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,305,363,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'PROGRAM':([0,],[2,]),'REPEAT':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'UNTIL':([146,148,149,153,155,158,160,184,185,190,191,192,194,195,196,198,199,200,201,202,204,207,210,211,214,215,216,245,247,248,249,260,264,268,270,271,275,276,283,284,285,286,287,313,314,315,316,317,319,320,321,322,323,324,325,326,327,329,330,336,337,338,342,343,344,345,368,374,375,377,380,381,382,383,386,395,398,403,404,405,406,407,408,],[-128,-128,-71,-99,-80,-74,-73,-69,-183,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,266,-128,-83,-81,-128,-128,-184,-122,-128,-128,-112,-182,-111,-72,-185,-166,-82,-191,-68,-70,-187,-128,-128,-121,-77,-169,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-78,-100,-85,-173,-102,-101,-128,-128,-120,-76,-168,-84,-128,-75,-87,-167,-128,-86,-170,-128,-128,-128,-79,-172,-171,]),'=':([9,11,45,47,65,66,67,68,132,133,134,135,190,191,192,193,194,195,196,198,199,200,201,202,210,211,245,249,260,264,275,276,313,316,320,321,322,324,326,327,329,337,338,368,377,],[18,21,69,72,89,90,91,92,170,171,172,173,-119,-118,252,257,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-122,-112,-182,-111,-82,-191,-121,-114,-115,-113,-179,-178,-180,-181,-116,-85,-173,-120,-84,]),'FOR':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'BEGIN':([1,5,7,14,15,19,20,26,27,48,51,52,58,71,79,80,82,84,86,87,88,115,116,118,119,121,139,140,141,142,145,148,174,175,176,177,183,215,239,240,243,247,248,286,287,304,359,360,361,362,364,365,380,386,387,388,393,394,403,404,405,],[-128,-8,-128,-128,-23,-188,-7,-43,-128,-42,-47,-128,-129,-22,-128,-4,121,-130,-132,-2,-131,-128,-50,-46,-189,121,-152,-155,-45,-153,-128,121,-150,-154,-44,-151,-128,121,-162,-56,121,121,121,121,121,-161,-160,-55,-54,-158,-159,-52,121,121,-157,-156,121,121,121,121,121,]),'READ':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'ELSE':([146,153,155,158,160,184,185,190,191,192,194,195,196,198,199,200,201,202,207,210,211,214,216,245,247,248,249,260,264,268,270,271,275,276,283,286,287,313,314,315,316,317,319,320,321,322,323,324,325,326,327,329,330,336,337,338,342,343,344,345,368,374,375,377,380,381,382,383,386,395,398,403,404,405,406,407,408,],[-128,-99,-80,-74,-73,-69,-183,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-128,-83,-81,-128,-184,-122,-128,-128,-112,-182,-111,-72,-185,-166,-82,-191,-68,-128,-128,-121,-77,-169,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-78,-100,-85,-173,-102,-101,380,380,-120,-76,-168,-84,-128,-75,-87,-167,-128,-86,-170,-128,-128,-128,-79,-172,-171,]),'END':([100,120,121,130,131,139,140,141,142,146,149,152,153,155,157,158,160,167,168,169,174,175,176,177,184,185,190,191,192,194,195,196,198,199,200,201,202,203,207,210,211,214,215,216,245,247,248,249,260,264,268,269,270,271,275,276,283,284,285,286,287,313,314,315,316,317,319,320,321,322,323,324,325,326,327,329,330,333,334,336,337,338,342,343,344,345,368,369,374,375,377,380,381,382,383,386,395,398,403,404,405,406,407,408,],[-128,146,-128,-32,-128,-152,-155,-45,-153,-128,-71,207,-99,-80,214,-74,-73,-37,-38,226,-150,-154,-44,-151,-69,-183,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,146,-128,-83,-81,-128,-128,-184,-122,-128,-128,-112,-182,-111,-72,-128,-183,-166,-82,-191,-68,-70,-187,-128,-128,-121,-77,-169,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-78,-89,374,-100,-85,-173,-102,-101,-128,-128,-120,-88,-76,-168,-84,-128,-75,-87,-167,-128,-86,-170,-128,-128,-128,-79,-172,-171,]),'DO':([188,190,191,192,194,195,196,198,199,200,201,202,210,211,245,249,260,264,275,276,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,347,368,377,396,397,],[247,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-122,-112,-182,-111,-82,-191,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,386,-120,-84,403,405,]),'WRITE':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'TRUE':([147,151,159,186,187,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,289,290,291,335,384,385,],[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,-98,-97,199,199,199,199,]),'error':([1,4,5,7,8,10,13,14,15,16,18,19,20,23,24,25,26,27,28,30,32,34,35,36,38,39,40,42,43,46,48,51,52,56,58,59,60,61,62,63,64,69,71,77,79,80,81,82,83,84,85,86,87,88,90,93,94,95,96,97,98,99,100,101,102,104,105,106,109,111,115,116,117,118,119,121,123,124,125,126,127,129,130,131,137,139,140,141,142,143,145,146,147,148,149,151,153,155,157,158,159,160,161,167,171,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,204,205,207,208,209,210,211,212,213,214,215,216,217,220,222,224,226,227,228,229,230,231,232,233,234,235,237,239,240,242,243,245,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,275,276,277,278,283,284,285,286,287,288,289,290,291,295,298,300,301,302,304,306,307,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,329,330,332,333,334,335,336,337,338,342,343,344,345,346,348,349,350,351,352,353,354,355,356,359,360,361,362,364,365,366,367,368,369,374,375,377,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,398,403,404,405,406,407,408,],[-128,11,-8,-128,17,19,-128,-128,-23,29,38,-188,-7,-24,47,49,-43,-128,-6,57,-21,-16,-17,-10,-138,-20,-11,67,-135,70,74,-47,-128,86,-129,-12,-14,-18,-13,-15,-19,102,-22,112,-128,-4,119,120,-133,-130,-5,-132,-2,-131,125,-31,-26,-35,-36,-34,-33,128,-128,-28,-144,-27,134,-141,138,140,-128,-50,-48,-46,-189,152,-139,-9,-137,-136,-134,166,-32,49,175,-152,-155,-45,-153,-128,-128,-128,193,203,-71,193,-99,-80,216,-74,193,-73,219,74,229,-150,-154,-44,-151,238,239,-58,241,-128,-69,-183,193,246,248,250,-119,-118,-108,-124,-128,-123,250,-125,-126,-110,-127,-117,267,193,-128,193,193,-83,276,280,193,-128,203,-184,287,-146,294,294,-29,-145,-25,-143,-142,-140,-60,-62,299,301,-61,-162,-56,309,120,-122,203,203,-112,250,318,318,250,250,250,318,250,318,-182,250,246,193,-111,246,193,-72,-128,-183,-166,-82,-191,193,-128,-68,-70,-187,203,203,193,-98,-97,193,349,-63,-57,299,352,299,299,359,364,-128,-121,-77,-169,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-78,373,-89,375,193,-100,-85,-173,-102,-101,-128,-128,385,-30,-147,-164,-59,-165,-66,-65,-64,-163,-160,-55,-54,-158,-159,-52,-51,-49,-120,-88,-76,-168,-84,203,-75,-87,-167,193,193,203,-157,-156,-67,-93,373,203,203,-86,404,-170,203,203,203,-79,-172,-171,]),'MULOP':([190,191,193,194,195,196,198,199,200,201,202,210,211,245,249,250,260,264,275,276,313,316,318,320,321,322,324,326,327,329,337,338,368,377,],[-119,-118,262,-124,-128,-123,-125,-126,265,-127,-117,-83,-81,-122,265,262,-182,265,-82,-191,-121,265,262,265,265,265,265,265,-181,-116,-85,-173,-120,-84,]),'DOWNTO':([190,191,192,194,195,196,198,199,200,201,202,210,211,219,245,249,260,264,275,276,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,346,368,377,],[-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,289,-122,-112,-182,-111,-82,-191,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,289,-120,-84,]),'OF':([128,190,191,192,194,195,196,198,199,200,201,202,206,210,211,223,245,249,260,264,275,276,310,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,368,377,],[162,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,269,-83,-81,295,-122,-112,-182,-111,-82,-191,363,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,-120,-84,]),'NOT':([147,151,159,186,187,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,289,290,291,335,384,385,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,-98,-97,187,187,187,187,]),'CHARACTER':([18,21,89,90,91,92,129,147,151,159,186,187,189,197,205,208,209,213,221,222,224,225,251,252,253,254,255,256,257,258,259,261,262,263,265,266,269,277,288,289,290,291,332,333,335,369,384,385,390,391,392,],[35,35,35,35,35,35,35,194,194,194,194,194,194,194,194,194,194,194,35,35,35,35,194,194,194,194,194,194,194,194,194,194,194,194,194,194,-128,194,194,-98,-97,194,35,-92,194,-128,194,194,-93,35,35,]),'OR':([190,191,192,193,194,195,196,198,199,200,201,202,210,211,245,249,260,264,275,276,313,316,317,318,319,320,321,322,323,324,325,326,327,329,337,338,368,377,],[-119,-118,254,261,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-122,-112,-182,-111,-82,-191,-121,-114,254,261,254,-115,-113,-179,254,-178,254,-180,-181,-116,-85,-173,-120,-84,]),'CASE':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'CONST':([1,58,79,84,86,87,88,115,116,239,240,304,359,360,361,362,364,365,387,388,],[4,-129,-128,-130,-132,-2,-131,4,-50,-162,-56,-161,-160,-55,-54,-158,-159,-52,-157,-156,]),'WHILE':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),')':([17,28,29,30,83,85,95,96,97,98,190,191,192,193,194,195,196,198,199,200,201,202,210,211,232,233,235,237,244,245,246,249,250,260,264,272,273,275,276,278,279,281,282,298,313,316,317,318,319,320,321,322,323,324,325,326,327,328,329,337,338,350,351,352,353,354,355,356,368,376,377,378,379,389,],[31,-6,54,56,-133,-5,-35,-36,-34,-33,-119,-118,-108,260,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-60,-62,300,-61,313,-122,260,-112,260,-182,-111,-106,336,-82,-191,-128,-104,342,343,-63,-121,-114,-109,260,-107,-115,-113,-179,-177,-178,-176,-180,-181,368,-116,-85,-173,-164,-59,-165,-66,-65,-64,-163,-120,-105,-84,-175,-103,-67,]),'REAL':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,305,363,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'TOTO':([32,34,35,39,59,60,61,62,63,64,163,166,294,],[-21,-16,-17,-20,-12,-14,-18,-13,-15,-19,221,225,225,]),'+':([18,21,89,90,91,92,129,147,151,159,186,190,191,192,193,194,195,196,198,199,200,201,202,205,208,209,210,211,213,221,222,224,225,245,249,252,253,257,259,260,263,264,266,269,275,276,277,288,289,290,291,313,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,335,337,338,368,369,377,384,385,390,391,392,],[33,33,33,33,33,33,33,197,197,197,197,-119,-118,255,258,-124,-128,-123,-125,-126,-110,-127,-117,197,197,197,-83,-81,197,33,33,33,33,-122,-112,197,197,197,197,-182,197,-111,197,-128,-82,-191,197,197,-98,-97,197,-121,-114,255,258,255,-115,-113,-179,255,-178,255,-180,-181,-116,33,-92,197,-85,-173,-120,-128,-84,197,197,-93,33,33,]),'-':([18,21,89,90,91,92,129,147,151,159,186,190,191,192,193,194,195,196,198,199,200,201,202,205,208,209,210,211,213,221,222,224,225,245,249,252,253,257,259,260,263,264,266,269,275,276,277,288,289,290,291,313,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,335,337,338,368,369,377,384,385,390,391,392,],[37,37,37,37,37,37,37,189,189,189,189,-119,-118,251,256,-124,-128,-123,-125,-126,-110,-127,-117,189,189,189,-83,-81,189,37,37,37,37,-122,-112,189,189,189,189,-182,189,-111,189,-128,-82,-191,189,189,-98,-97,189,-121,-114,251,256,251,-115,-113,-179,251,-178,251,-180,-181,-116,37,-92,189,-85,-173,-120,-128,-84,189,189,-93,37,37,]),'RELOP':([190,191,192,193,194,195,196,198,199,200,201,202,210,211,245,249,260,264,275,276,313,316,320,321,322,324,326,327,329,337,338,368,377,],[-119,-118,253,259,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-122,-112,-182,-111,-82,-191,-121,-114,-115,-113,-179,-178,-180,-181,-116,-85,-173,-120,-84,]),'ARRAY':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,],[99,99,99,99,99,99,99,99,99,99,99,310,99,310,]),'PROCEDURE':([1,5,7,14,15,19,20,26,27,48,51,52,58,71,78,80,84,86,87,88,118,119,139,140,141,142,174,175,176,177,],[-128,-8,-128,-128,-23,-188,-7,-43,-128,-42,-47,-128,-129,-22,113,-53,-130,-132,-2,-131,-46,-189,-152,-155,-45,-153,-150,-154,-44,-151,]),'RECORD':([69,72,76,77,108,109,162,170,171,172,173,295,],[100,100,100,100,100,100,100,100,100,100,100,100,]),'FALSE':([147,151,159,186,187,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,289,290,291,335,384,385,],[201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,-98,-97,201,201,201,201,]),'$end':([3,6,12,119,122,146,184,185,207,214,216,270,283,],[0,-186,-1,-190,-3,-128,-69,-183,-128,-128,-184,-185,-68,]),';':([10,11,31,32,34,35,36,38,39,43,46,47,54,56,57,59,60,61,62,63,64,81,93,94,95,96,97,98,101,102,106,110,111,112,117,121,123,124,125,126,127,136,137,138,143,146,148,149,153,155,157,158,160,179,180,184,185,190,191,192,194,195,196,198,199,200,201,202,204,207,210,211,214,215,216,220,226,227,228,229,230,231,232,233,235,237,238,241,245,247,248,249,260,264,267,268,270,271,275,276,283,284,285,286,287,298,300,307,308,309,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,329,330,331,336,337,338,342,343,344,345,348,349,350,351,352,353,354,355,356,357,358,366,367,368,372,374,375,377,380,381,382,383,386,389,393,394,395,398,399,401,402,403,404,405,406,407,408,],[20,22,58,-21,-16,-17,-10,-138,-20,-135,71,73,84,87,88,-12,-14,-18,-13,-15,-19,118,-31,-26,-35,-36,-34,-33,-28,-144,-141,139,141,142,-48,-128,-139,-9,-137,-136,-134,174,176,177,-128,-128,-128,-71,-99,-80,215,-74,-73,240,-58,-69,-183,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,215,-128,-83,-81,-128,-128,285,-146,-29,-145,-25,-143,-142,-140,-60,-62,302,-61,304,306,-122,-128,-128,-112,-182,-111,285,-72,-183,-166,-82,-191,-68,-70,-187,-128,-128,-63,-57,360,361,362,365,-128,-121,-77,-169,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-78,369,-100,-85,-173,-102,-101,-128,-128,-30,-147,-164,-59,-165,-66,-65,-64,-163,387,388,-51,-49,-120,-91,-76,-168,-84,-128,-75,-87,-167,-128,-67,-128,-128,-86,-170,-90,-94,-174,-128,-128,-128,-79,-172,-171,]),'ID':([2,4,13,16,18,19,20,21,22,23,24,25,33,37,40,41,42,44,48,53,55,69,70,71,72,73,76,77,89,90,91,92,100,103,104,105,107,108,109,113,114,121,129,130,131,139,140,141,142,147,148,151,159,161,162,167,170,171,172,173,174,175,176,177,178,181,186,187,189,197,205,208,209,212,213,215,221,222,224,225,234,242,247,248,251,252,253,254,255,256,257,258,259,261,262,263,265,266,269,274,277,286,287,288,289,290,291,295,301,302,303,304,305,306,332,333,335,340,341,369,380,384,385,386,390,391,392,393,394,403,404,405,],[8,9,-128,28,32,-128,-128,32,-128,-24,45,28,59,62,-11,65,66,68,28,83,85,93,-128,-128,93,-128,93,93,32,32,32,32,-128,132,-27,133,135,93,93,143,144,153,32,-32,28,-152,-155,-45,-153,195,153,195,195,218,93,28,93,93,93,93,-150,-154,-44,-151,28,28,195,195,195,195,195,195,195,278,195,153,32,32,32,32,28,307,153,153,195,195,195,195,195,195,195,195,195,195,195,195,195,195,-128,337,195,153,153,195,-98,-97,195,93,28,28,353,28,357,28,32,-92,195,278,278,-128,153,195,195,153,-93,32,32,153,153,153,153,153,]),'NUM':([18,21,33,37,89,90,91,92,129,147,151,159,186,187,189,197,205,208,209,213,221,222,224,225,251,252,253,254,255,256,257,258,259,261,262,263,265,266,269,277,288,289,290,291,332,333,335,369,384,385,390,391,392,],[34,34,60,63,34,34,34,34,34,196,196,196,196,196,196,196,196,196,196,196,34,34,34,34,196,196,196,196,196,196,196,196,196,196,196,196,196,196,-128,196,196,-98,-97,196,34,-92,196,-128,196,196,-93,34,34,]),']':([32,34,35,39,59,60,61,62,63,64,164,165,190,191,192,194,195,196,198,199,200,201,202,210,211,245,249,260,264,272,275,276,292,293,296,297,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,339,368,376,377,],[-21,-16,-17,-20,-12,-14,-18,-13,-15,-19,-40,223,-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,-122,-112,-182,-111,-106,-82,338,-41,-39,-148,-149,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,377,-120,-105,-84,]),':':([28,32,34,35,39,49,50,59,60,61,62,63,64,74,75,83,85,144,180,182,236,241,300,370,371,373,400,],[-6,-21,-16,-17,-20,76,77,-12,-14,-18,-13,-15,-19,108,109,-133,-5,-128,-58,242,303,305,-57,-96,393,394,-95,]),'TYPE':([1,5,7,19,20,58,79,84,86,87,88,115,116,145,239,240,304,359,360,361,362,364,365,387,388,],[-128,-8,13,-188,-7,-129,-128,-130,-132,-2,-131,-128,-50,13,-162,-56,-161,-160,-55,-54,-158,-159,-52,-157,-156,]),'THEN':([190,191,192,194,195,196,198,199,200,201,202,210,211,217,245,249,260,264,275,276,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,368,377,],[-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,286,-122,-112,-182,-111,-82,-191,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,-120,-84,]),'CHAR':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,305,363,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'FLOAT':([18,21,33,37,89,90,91,92,129,147,151,159,186,187,189,197,205,208,209,213,221,222,224,225,251,252,253,254,255,256,257,258,259,261,262,263,265,266,269,277,288,289,290,291,332,333,335,369,384,385,390,391,392,],[39,39,61,64,39,39,39,39,39,198,198,198,198,198,198,198,198,198,198,198,39,39,39,39,198,198,198,198,198,198,198,198,198,198,198,198,198,198,-128,198,198,-98,-97,198,39,-92,198,-128,198,198,-93,39,39,]),'BOOLEAN':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,305,363,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'IF':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'.':([6,119,122,146,153,184,185,195,207,210,211,214,216,270,275,278,283,337,338,377,],[12,-190,-3,-128,-128,-69,-183,-128,-128,-83,274,-128,-184,-185,-82,-128,-68,-85,-173,-84,]),'TO':([190,191,192,194,195,196,198,199,200,201,202,210,211,219,245,249,260,264,275,276,313,316,317,319,320,321,322,323,324,325,326,327,329,337,338,346,368,377,],[-119,-118,-108,-124,-128,-123,-125,-126,-110,-127,-117,-83,-81,290,-122,-112,-182,-111,-82,-191,-121,-114,-109,-107,-115,-113,-179,-177,-178,-176,-180,-181,-116,-85,-173,290,-120,-84,]),'FUNCTION':([1,5,7,14,15,19,20,26,27,48,51,52,58,71,78,80,84,86,87,88,118,119,139,140,141,142,174,175,176,177,],[-128,-8,-128,-128,-23,-188,-7,-43,-128,-42,-47,-128,-129,-22,114,-53,-130,-132,-2,-131,-46,-189,-152,-155,-45,-153,-150,-154,-44,-151,]),'[':([99,153,195,210,211,275,278,337,338,377,],[129,-128,-128,-83,277,-82,-128,-85,-173,-84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LX':([269,],[332,]),'branch_list':([269,],[331,]),'U':([146,207,214,],[185,270,283,]),'X':([52,],[78,]),'branch':([332,391,],[372,399,]),'var_declarations':([14,183,],[27,243,]),'identifier_list':([16,25,48,131,167,178,181,234,301,302,304,306,],[30,50,75,50,75,236,236,236,236,236,236,236,]),'subprogram_declarations':([27,],[52,]),'expression_list':([209,213,263,277,],[273,282,328,339,]),'variables':([212,],[281,]),'value_parameter':([178,181,234,301,302,304,306,],[233,233,298,233,233,233,233,]),'parameter_lists':([178,181,],[235,235,]),'subprogram_body':([79,],[117,]),'type_declarations':([7,145,],[14,183,]),'subprogram_declaration':([52,],[81,]),'formal_parameter':([143,144,],[179,182,]),'LZ':([369,],[391,]),'call_procedure_statement':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'LC_U':([312,],[367,]),'updown':([219,346,],[291,384,]),'var_declaration':([25,131,],[48,167,]),'parameter_list':([178,181,301,302,304,306,],[232,232,350,351,356,356,]),'array_type':([242,303,],[308,354,]),'case_body':([269,],[334,]),'id_varpart':([211,],[275,]),'program_body':([1,],[6,]),'statement':([121,148,215,247,248,286,287,380,386,393,394,403,404,405,],[149,149,284,314,315,344,345,395,398,401,402,406,407,408,]),'R':([13,],[24,]),'expression':([147,151,159,186,205,208,209,213,263,266,277,288,291,335,384,385,],[188,206,217,244,268,271,272,272,272,330,272,346,347,376,396,397,]),'record_body':([131,],[169,]),'variable':([121,147,148,151,159,186,187,189,197,205,208,209,212,213,215,247,248,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,286,287,288,291,335,340,341,380,384,385,386,393,394,403,404,405,],[150,190,150,190,190,190,190,190,190,190,190,190,279,190,150,150,150,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,150,150,190,190,190,378,379,150,190,190,150,150,150,150,150,150,]),'else_part':([344,345,],[381,383,]),'var_parameter':([178,181,301,302,304,306,],[237,237,237,237,237,237,]),'S':([70,71,73,],[103,105,107,]),'unsign_const_variable':([147,151,159,186,187,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,291,335,384,385,],[191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'const_declaration':([4,],[10,]),'simple_expression':([147,151,159,186,205,208,209,213,252,253,257,259,263,266,277,288,291,335,384,385,],[192,192,192,192,192,192,192,192,317,319,323,325,192,192,192,192,192,192,192,192,]),'type_declaration':([24,],[46,]),'period':([129,222,224,],[164,293,296,]),'program_head':([0,],[1,]),'periods':([129,],[165,]),'subprogram_head':([52,],[79,]),'type':([69,72,76,77,108,109,162,170,171,172,173,295,],[94,106,110,111,136,137,220,227,228,230,231,348,]),'empty':([1,7,13,14,19,20,22,27,52,70,71,73,79,100,115,121,131,143,144,145,146,148,153,183,195,207,214,215,247,248,269,278,286,287,312,344,345,369,380,386,393,394,403,404,405,],[5,15,23,26,40,40,40,51,80,104,104,104,116,130,5,155,168,180,180,15,184,155,210,26,210,184,184,155,155,155,333,210,155,155,366,382,382,390,155,155,155,155,155,155,155,]),'L':([100,],[131,]),'const_variable':([18,21,89,90,91,92,129,221,222,224,225,332,391,392,],[36,43,123,124,126,127,163,292,163,163,297,370,370,400,]),'const_declarations':([1,115,],[7,145,]),'const_list':([332,391,],[371,371,]),'statement_list':([121,148,],[157,204,]),'compound_statement':([82,121,148,215,243,247,248,286,287,380,386,393,394,403,404,405,],[122,158,158,158,312,158,158,158,158,158,158,158,158,158,158,158,]),'term':([147,151,159,186,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,263,266,277,288,291,335,384,385,],[200,200,200,200,249,264,200,200,200,200,316,200,200,320,321,322,200,324,200,326,200,200,200,200,200,200,200,200,]),'program':([0,],[3,]),'factor':([147,151,159,186,187,189,197,205,208,209,213,251,252,253,254,255,256,257,258,259,261,262,263,265,266,277,288,291,335,384,385,],[202,202,202,202,245,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,327,202,329,202,202,202,202,202,202,202,]),'T':([79,],[115,]),'Q':([19,20,22,],[41,42,44,]),'id_varparts':([153,195,278,],[211,211,211,]),'standard_type':([69,72,76,77,108,109,162,170,171,172,173,242,295,303,305,363,],[101,101,101,101,101,101,101,101,101,101,101,311,101,355,358,389,]),'O':([52,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_head program_body .','program',3,'p_program','my_yacc_debug.py',14),
  ('program_head -> PROGRAM ID ( identifier_list ) ;','program_head',6,'p_program_head','my_yacc_debug.py',20),
  ('program_body -> const_declarations type_declarations var_declarations subprogram_declarations O compound_statement','program_body',6,'p_program_body','my_yacc_debug.py',27),
  ('O -> empty','O',1,'p_O','my_yacc_debug.py',32),
  ('identifier_list -> identifier_list , ID','identifier_list',3,'p_identifier_list','my_yacc_debug.py',37),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','my_yacc_debug.py',38),
  ('const_declarations -> CONST const_declaration ;','const_declarations',3,'p_const_declarations','my_yacc_debug.py',84),
  ('const_declarations -> empty','const_declarations',1,'p_const_declarations','my_yacc_debug.py',85),
  ('const_declaration -> const_declaration ; Q ID = const_variable','const_declaration',6,'p_const_declaration','my_yacc_debug.py',99),
  ('const_declaration -> ID = const_variable','const_declaration',3,'p_const_declaration','my_yacc_debug.py',100),
  ('Q -> empty','Q',1,'p_Q','my_yacc_debug.py',140),
  ('const_variable -> + ID','const_variable',2,'p_const_variable_1','my_yacc_debug.py',146),
  ('const_variable -> - ID','const_variable',2,'p_const_variable_2','my_yacc_debug.py',164),
  ('const_variable -> + NUM','const_variable',2,'p_const_variable_3','my_yacc_debug.py',181),
  ('const_variable -> - NUM','const_variable',2,'p_const_variable_4','my_yacc_debug.py',190),
  ('const_variable -> NUM','const_variable',1,'p_const_variable_5','my_yacc_debug.py',199),
  ('const_variable -> CHARACTER','const_variable',1,'p_const_variable_6','my_yacc_debug.py',208),
  ('const_variable -> + FLOAT','const_variable',2,'p_const_variable_7','my_yacc_debug.py',217),
  ('const_variable -> - FLOAT','const_variable',2,'p_const_variable_8','my_yacc_debug.py',226),
  ('const_variable -> FLOAT','const_variable',1,'p_const_variable_9','my_yacc_debug.py',235),
  ('const_variable -> ID','const_variable',1,'p_const_variable_10','my_yacc_debug.py',245),
  ('type_declarations -> TYPE R type_declaration ;','type_declarations',4,'p_type_declarations','my_yacc_debug.py',262),
  ('type_declarations -> empty','type_declarations',1,'p_type_declarations','my_yacc_debug.py',263),
  ('R -> empty','R',1,'p_R','my_yacc_debug.py',271),
  ('type_declaration -> type_declaration ; S ID = type','type_declaration',6,'p_type_declaration','my_yacc_debug.py',276),
  ('type_declaration -> ID = type','type_declaration',3,'p_type_declaration','my_yacc_debug.py',277),
  ('S -> empty','S',1,'p_S','my_yacc_debug.py',327),
  ('type -> standard_type','type',1,'p_type1','my_yacc_debug.py',332),
  ('type -> RECORD L record_body END','type',4,'p_type1','my_yacc_debug.py',333),
  ('type -> ARRAY [ periods ] OF type','type',6,'p_type1','my_yacc_debug.py',334),
  ('type -> ID','type',1,'p_type2','my_yacc_debug.py',361),
  ('L -> empty','L',1,'p_L','my_yacc_debug.py',384),
  ('standard_type -> INTEGER','standard_type',1,'p_standard_type1','my_yacc_debug.py',392),
  ('standard_type -> REAL','standard_type',1,'p_standard_type2','my_yacc_debug.py',399),
  ('standard_type -> BOOLEAN','standard_type',1,'p_standard_type3','my_yacc_debug.py',407),
  ('standard_type -> CHAR','standard_type',1,'p_standard_type4','my_yacc_debug.py',414),
  ('record_body -> var_declaration','record_body',1,'p_record_body1','my_yacc_debug.py',421),
  ('record_body -> empty','record_body',1,'p_record_body2','my_yacc_debug.py',431),
  ('periods -> periods , period','periods',3,'p_periods','my_yacc_debug.py',438),
  ('periods -> period','periods',1,'p_periods','my_yacc_debug.py',439),
  ('period -> const_variable TOTO const_variable','period',3,'p_period','my_yacc_debug.py',454),
  ('var_declarations -> VAR var_declaration','var_declarations',2,'p_var_declarations','my_yacc_debug.py',465),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations','my_yacc_debug.py',466),
  ('var_declaration -> var_declaration identifier_list : type ;','var_declaration',5,'p_var_declaration','my_yacc_debug.py',476),
  ('var_declaration -> identifier_list : type ;','var_declaration',4,'p_var_declaration','my_yacc_debug.py',477),
  ('subprogram_declarations -> subprogram_declarations subprogram_declaration ;','subprogram_declarations',3,'p_subprogram_declarations','my_yacc_debug.py',577),
  ('subprogram_declarations -> empty','subprogram_declarations',1,'p_subprogram_declarations','my_yacc_debug.py',578),
  ('subprogram_declaration -> subprogram_head subprogram_body','subprogram_declaration',2,'p_subprogram_declaration','my_yacc_debug.py',587),
  ('subprogram_body -> T const_declarations type_declarations var_declarations compound_statement LC_U','subprogram_body',6,'p_subprogram_body','my_yacc_debug.py',597),
  ('T -> empty','T',1,'p_T','my_yacc_debug.py',608),
  ('LC_U -> empty','LC_U',1,'p_LC_U','my_yacc_debug.py',616),
  ('subprogram_head -> X FUNCTION ID formal_parameter : standard_type ;','subprogram_head',7,'p_subprogram_head1','my_yacc_debug.py',622),
  ('X -> empty','X',1,'p_X','my_yacc_debug.py',645),
  ('subprogram_head -> X FUNCTION ID formal_parameter : array_type ;','subprogram_head',7,'p_subprogram_head2','my_yacc_debug.py',658),
  ('subprogram_head -> X FUNCTION ID formal_parameter : ID ;','subprogram_head',7,'p_subprogram_head3','my_yacc_debug.py',684),
  ('subprogram_head -> X PROCEDURE ID formal_parameter ;','subprogram_head',5,'p_subprogram_head4','my_yacc_debug.py',717),
  ('formal_parameter -> ( parameter_lists )','formal_parameter',3,'p_formal_parameter','my_yacc_debug.py',741),
  ('formal_parameter -> empty','formal_parameter',1,'p_formal_parameter','my_yacc_debug.py',742),
  ('parameter_lists -> parameter_lists ; parameter_list','parameter_lists',3,'p_parameter_lists','my_yacc_debug.py',757),
  ('parameter_lists -> parameter_list','parameter_lists',1,'p_parameter_lists','my_yacc_debug.py',758),
  ('parameter_list -> var_parameter','parameter_list',1,'p_parameter_list1','my_yacc_debug.py',775),
  ('parameter_list -> value_parameter','parameter_list',1,'p_parameter_list2','my_yacc_debug.py',785),
  ('var_parameter -> VAR value_parameter','var_parameter',2,'p_','my_yacc_debug.py',802),
  ('value_parameter -> identifier_list : standard_type','value_parameter',3,'p_value_parameter1','my_yacc_debug.py',823),
  ('value_parameter -> identifier_list : array_type','value_parameter',3,'p_value_parameter2','my_yacc_debug.py',845),
  ('value_parameter -> identifier_list : ID','value_parameter',3,'p_value_parameter3','my_yacc_debug.py',869),
  ('array_type -> ARRAY OF standard_type','array_type',3,'p_array_type','my_yacc_debug.py',901),
  ('compound_statement -> BEGIN statement_list END U','compound_statement',4,'p_compund_statement','my_yacc_debug.py',909),
  ('U -> empty','U',1,'p_U','my_yacc_debug.py',917),
  ('statement_list -> statement_list ; statement','statement_list',3,'p_statement_list','my_yacc_debug.py',922),
  ('statement_list -> statement','statement_list',1,'p_statement_list','my_yacc_debug.py',923),
  ('statement -> variable ASSIGNOP expression','statement',3,'p_statement1','my_yacc_debug.py',936),
  ('statement -> call_procedure_statement','statement',1,'p_statement2','my_yacc_debug.py',964),
  ('statement -> compound_statement','statement',1,'p_statement3','my_yacc_debug.py',971),
  ('statement -> IF expression THEN statement else_part','statement',5,'p_statement4','my_yacc_debug.py',978),
  ('statement -> CASE expression OF case_body END','statement',5,'p_statement5','my_yacc_debug.py',989),
  ('statement -> WHILE expression DO statement','statement',4,'p_statement6','my_yacc_debug.py',999),
  ('statement -> REPEAT statement_list UNTIL expression','statement',4,'p_statement7','my_yacc_debug.py',1010),
  ('statement -> FOR ID ASSIGNOP expression updown expression DO statement','statement',8,'p_statement8','my_yacc_debug.py',1021),
  ('statement -> empty','statement',1,'p_statement9','my_yacc_debug.py',1039),
  ('variable -> ID id_varparts','variable',2,'p_variable','my_yacc_debug.py',1045),
  ('id_varparts -> id_varparts id_varpart','id_varparts',2,'p_id_varparts','my_yacc_debug.py',1065),
  ('id_varparts -> empty','id_varparts',1,'p_id_varparts','my_yacc_debug.py',1066),
  ('id_varpart -> [ expression_list ]','id_varpart',3,'p_id_varpart','my_yacc_debug.py',1100),
  ('id_varpart -> . ID','id_varpart',2,'p_id_varpart','my_yacc_debug.py',1101),
  ('else_part -> ELSE statement','else_part',2,'p_else_part','my_yacc_debug.py',1143),
  ('else_part -> empty','else_part',1,'p_else_part','my_yacc_debug.py',1144),
  ('case_body -> branch_list ;','case_body',2,'p_case_body','my_yacc_debug.py',1155),
  ('case_body -> empty','case_body',1,'p_case_body','my_yacc_debug.py',1156),
  ('branch_list -> branch_list ; LZ branch','branch_list',4,'p_branch_list','my_yacc_debug.py',1167),
  ('branch_list -> LX branch','branch_list',2,'p_branch_list','my_yacc_debug.py',1168),
  ('LX -> empty','LX',1,'p_LX','my_yacc_debug.py',1180),
  ('LZ -> empty','LZ',1,'p_LZ','my_yacc_debug.py',1185),
  ('branch -> const_list : statement','branch',3,'p_branch','my_yacc_debug.py',1190),
  ('const_list -> const_list , const_variable','const_list',3,'p_const_list','my_yacc_debug.py',1202),
  ('const_list -> const_variable','const_list',1,'p_const_list','my_yacc_debug.py',1203),
  ('updown -> TO','updown',1,'p_updown1','my_yacc_debug.py',1222),
  ('updown -> DOWNTO','updown',1,'p_updown2','my_yacc_debug.py',1229),
  ('call_procedure_statement -> ID','call_procedure_statement',1,'p_call_procedure_statement1','my_yacc_debug.py',1236),
  ('call_procedure_statement -> ID ( expression_list )','call_procedure_statement',4,'p_call_procedure_statement2','my_yacc_debug.py',1248),
  ('call_procedure_statement -> WRITE ( expression_list )','call_procedure_statement',4,'p_call_procedure_statement3','my_yacc_debug.py',1279),
  ('call_procedure_statement -> READ ( variables )','call_procedure_statement',4,'p_call_procedure_statement4','my_yacc_debug.py',1297),
  ('variables -> variables , variable','variables',3,'p_variables','my_yacc_debug.py',1318),
  ('variables -> variable','variables',1,'p_variables','my_yacc_debug.py',1319),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','my_yacc_debug.py',1332),
  ('expression_list -> expression','expression_list',1,'p_expression_list','my_yacc_debug.py',1333),
  ('expression -> simple_expression RELOP simple_expression','expression',3,'p_expression1','my_yacc_debug.py',1355),
  ('expression -> simple_expression','expression',1,'p_expression1','my_yacc_debug.py',1356),
  ('expression -> simple_expression = simple_expression','expression',3,'p_expression2','my_yacc_debug.py',1377),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression1','my_yacc_debug.py',1391),
  ('simple_expression -> + term','simple_expression',2,'p_simple_expression2','my_yacc_debug.py',1400),
  ('simple_expression -> - term','simple_expression',2,'p_simple_expression3','my_yacc_debug.py',1413),
  ('simple_expression -> simple_expression + term','simple_expression',3,'p_simple_expression4','my_yacc_debug.py',1426),
  ('simple_expression -> simple_expression - term','simple_expression',3,'p_simple_expression5','my_yacc_debug.py',1441),
  ('simple_expression -> simple_expression OR term','simple_expression',3,'p_simple_expression6','my_yacc_debug.py',1456),
  ('term -> term MULOP factor','term',3,'p_term','my_yacc_debug.py',1479),
  ('term -> factor','term',1,'p_term','my_yacc_debug.py',1480),
  ('factor -> unsign_const_variable','factor',1,'p_factor1','my_yacc_debug.py',1544),
  ('factor -> variable','factor',1,'p_factor2','my_yacc_debug.py',1552),
  ('factor -> ID ( expression_list )','factor',4,'p_factor3','my_yacc_debug.py',1561),
  ('factor -> ( expression )','factor',3,'p_factor4','my_yacc_debug.py',1580),
  ('factor -> NOT factor','factor',2,'p_factor5','my_yacc_debug.py',1588),
  ('unsign_const_variable -> NUM','unsign_const_variable',1,'p_unsigned_const_variable1','my_yacc_debug.py',1596),
  ('unsign_const_variable -> CHARACTER','unsign_const_variable',1,'p_unsigned_const_variable2','my_yacc_debug.py',1605),
  ('unsign_const_variable -> FLOAT','unsign_const_variable',1,'p_unsigned_const_variable3','my_yacc_debug.py',1614),
  ('unsign_const_variable -> TRUE','unsign_const_variable',1,'p_unsigned_const_variable_11','my_yacc_debug.py',1623),
  ('unsign_const_variable -> FALSE','unsign_const_variable',1,'p_unsigned_const_variable_12','my_yacc_debug.py',1632),
  ('empty -> <empty>','empty',0,'p_empty','my_yacc_debug.py',1641),
  ('program_head -> PROGRAM ID error ) ;','program_head',5,'p_program_head_error0','my_yacc_debug.py',1648),
  ('program_head -> PROGRAM ID ( error ) ;','program_head',6,'p_program_head_error1','my_yacc_debug.py',1655),
  ('program_head -> PROGRAM ID ( identifier_list error ;','program_head',6,'p_program_head_error2','my_yacc_debug.py',1660),
  ('program_head -> PROGRAM ID ( identifier_list ) error','program_head',6,'p_program_head_error3','my_yacc_debug.py',1665),
  ('identifier_list -> error , ID','identifier_list',3,'p_identifier_list_error','my_yacc_debug.py',1670),
  ('const_declaration -> error ; Q ID = const_variable','const_declaration',6,'p_const_declaration_error0','my_yacc_debug.py',1675),
  ('const_declaration -> error = const_variable','const_declaration',3,'p_const_declaration_error1','my_yacc_debug.py',1682),
  ('const_declaration -> const_declaration ; Q error = const_variable','const_declaration',6,'p_const_declaration_error2','my_yacc_debug.py',1689),
  ('const_declaration -> const_declaration ; Q ID = error','const_declaration',6,'p_const_declaration_error3','my_yacc_debug.py',1696),
  ('const_declaration -> ID = error','const_declaration',3,'p_const_declaration_error4','my_yacc_debug.py',1703),
  ('const_declaration -> const_declaration error Q ID = const_variable','const_declaration',6,'p_const_declaration_error5','my_yacc_debug.py',1710),
  ('type_declaration -> error ; S ID = type','type_declaration',6,'p_type_declaration_error0','my_yacc_debug.py',1717),
  ('type_declaration -> error = type','type_declaration',3,'p_type_declaration_error1','my_yacc_debug.py',1724),
  ('type_declaration -> type_declaration ; S error = type','type_declaration',6,'p_type_declaration_error2','my_yacc_debug.py',1731),
  ('type_declaration -> type_declaration ; S ID = error','type_declaration',6,'p_type_declaration_error3','my_yacc_debug.py',1738),
  ('type_declaration -> ID = error','type_declaration',3,'p_type_declaration_error4','my_yacc_debug.py',1745),
  ('type_declaration -> type_declaration error S ID = type','type_declaration',6,'p_type_declaration_error5','my_yacc_debug.py',1752),
  ('type -> ARRAY error OF type','type',4,'p_type_error0','my_yacc_debug.py',1759),
  ('type -> ARRAY [ periods ] OF error','type',6,'p_type_error1','my_yacc_debug.py',1766),
  ('periods -> error , period','periods',3,'p_periods_error','my_yacc_debug.py',1773),
  ('period -> error TOTO const_variable','period',3,'p_period_error','my_yacc_debug.py',1780),
  ('var_declaration -> var_declaration error : type ;','var_declaration',5,'p_var_declaration_error0','my_yacc_debug.py',1787),
  ('var_declaration -> var_declaration identifier_list : error ;','var_declaration',5,'p_var_declaration_error1','my_yacc_debug.py',1794),
  ('var_declaration -> error : type ;','var_declaration',4,'p_var_declaration_error2','my_yacc_debug.py',1801),
  ('var_declaration -> identifier_list : error ;','var_declaration',4,'p_var_declaration_error3','my_yacc_debug.py',1808),
  ('var_declaration -> var_declaration identifier_list : type error','var_declaration',5,'p_var_declaration_error4','my_yacc_debug.py',1815),
  ('var_declaration -> identifier_list : type error','var_declaration',4,'p_var_declaration_error5','my_yacc_debug.py',1822),
  ('subprogram_head -> X FUNCTION ID ( error : standard_type ;','subprogram_head',8,'p_subprogram_head_error0','my_yacc_debug.py',1829),
  ('subprogram_head -> X FUNCTION ID ( error : ID ;','subprogram_head',8,'p_subprogram_head_error1','my_yacc_debug.py',1836),
  ('subprogram_head -> X FUNCTION ID formal_parameter : error ;','subprogram_head',7,'p_subprogram_head_error2','my_yacc_debug.py',1843),
  ('subprogram_head -> X FUNCTION ID formal_parameter : standard_type error','subprogram_head',7,'p_subprogram_head_error3','my_yacc_debug.py',1850),
  ('subprogram_head -> X FUNCTION ID formal_parameter : ID error','subprogram_head',7,'p_subprogram_head_error4','my_yacc_debug.py',1857),
  ('subprogram_head -> X PROCEDURE ID ( error ;','subprogram_head',6,'p_subprogram_head_error5','my_yacc_debug.py',1864),
  ('subprogram_head -> X PROCEDURE ID formal_parameter error','subprogram_head',5,'p_subprogram_head_error6','my_yacc_debug.py',1871),
  ('parameter_lists -> error ; parameter_list','parameter_lists',3,'p_parameter_lists_error0','my_yacc_debug.py',1878),
  ('parameter_lists -> parameter_lists error parameter_list','parameter_lists',3,'p_parameter_lists_error1','my_yacc_debug.py',1885),
  ('parameter_lists -> parameter_lists ; error','parameter_lists',3,'p_parameter_lists_error2','my_yacc_debug.py',1892),
  ('statement -> error ASSIGNOP expression','statement',3,'p_statement_error0','my_yacc_debug.py',1899),
  ('statement -> IF expression error statement else_part','statement',5,'p_statement_error1','my_yacc_debug.py',1906),
  ('statement -> CASE expression OF case_body error','statement',5,'p_statement_error3','my_yacc_debug.py',1913),
  ('statement -> WHILE expression error statement','statement',4,'p_statement_error4','my_yacc_debug.py',1920),
  ('statement -> FOR error updown expression DO statement','statement',6,'p_statement_error5','my_yacc_debug.py',1927),
  ('statement -> FOR ID ASSIGNOP expression error expression DO statement','statement',8,'p_statement_error6','my_yacc_debug.py',1934),
  ('statement -> FOR ID ASSIGNOP expression updown expression error statement','statement',8,'p_statement_error7','my_yacc_debug.py',1941),
  ('id_varpart -> error ]','id_varpart',2,'p_id_varpart_errpr','my_yacc_debug.py',1948),
  ('branch -> error : statement','branch',3,'p_branch_error','my_yacc_debug.py',1955),
  ('variables -> error , variable','variables',3,'p_variables_error','my_yacc_debug.py',1962),
  ('expression -> error RELOP simple_expression','expression',3,'p_expression_error0','my_yacc_debug.py',1969),
  ('expression -> error = simple_expression','expression',3,'p_expression_error2','my_yacc_debug.py',1976),
  ('simple_expression -> error + term','simple_expression',3,'p_simple_expression_error0','my_yacc_debug.py',1983),
  ('simple_expression -> error - term','simple_expression',3,'p_simple_expression_error1','my_yacc_debug.py',1990),
  ('simple_expression -> error OR term','simple_expression',3,'p_simple_expression_error2','my_yacc_debug.py',1997),
  ('term -> error MULOP factor','term',3,'p_term_error','my_yacc_debug.py',2004),
  ('factor -> error )','factor',2,'p_factor_error','my_yacc_debug.py',2011),
  ('compound_statement -> error END U','compound_statement',3,'p_compund_statement_error0','my_yacc_debug.py',2017),
  ('compound_statement -> BEGIN statement_list error','compound_statement',3,'p_compund_statement_error1','my_yacc_debug.py',2024),
  ('compound_statement -> BEGIN error END U','compound_statement',4,'p_compund_statement_error2','my_yacc_debug.py',2031),
  ('program -> program_head program_body','program',2,'p_program_error','my_yacc_debug.py',2038),
  ('statement_list -> statement_list error ;','statement_list',3,'p_statement_list_error','my_yacc_debug.py',2046),
  ('const_declarations -> CONST const_declaration error','const_declarations',3,'p_const_declarations_error','my_yacc_debug.py',2053),
  ('subprogram_declarations -> subprogram_declarations subprogram_declaration error','subprogram_declarations',3,'p_subprogram_declarations_error','my_yacc_debug.py',2060),
  ('program_body -> const_declarations type_declarations var_declarations subprogram_declarations subprogram_declaration error','program_body',6,'p_program_body_error','my_yacc_debug.py',2067),
  ('variable -> ID id_varparts error','variable',3,'p_variable_error','my_yacc_debug.py',2071),
]
